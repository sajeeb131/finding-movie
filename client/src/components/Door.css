.door-container{
    display: flex;
    flex-direction: row;
    height: 100%;
    border-radius: 15px;
    box-shadow:  0 0 1em 0 var(--black);
    background-color: var(--medium-black);
    overflow: hidden;
    z-index: 2;
}

.door-part{
    background-color: var(--medium-black);

    padding: 8px;
    overflow: hidden;
    border-color: var(--dark-black);
}

.door-design{
    width: 100%;
    height: 100%;
    background: linear-gradient(45deg, rgba(255, 255, 255, 0.2) 7.5%, rgba(0, 0, 0, 0) 7.5%, rgba(0, 0, 0, 0) 42.5%, rgba(229, 229, 229, 0.2) 42.5%, rgba(229, 229, 229, 0.2) 57.5%, rgba(0, 0, 0, 0) 57.5%, rgba(0, 0, 0, 0) 92.5%, rgba(229, 229, 229, 0.2) 92.5%);
    background-size: 1em 1em;
    border-radius: 5px;
    opacity: 0.3;
}

.lock-circle {
    position: absolute;
    background-color: var(--medium-black);
    width: 50px;
    height: 50px;
    border-radius: 50%;
    border: 2px solid var(--dark-black);
    box-shadow: 0 0.5em 0 #1c1c25;

    /* Centering */
    top: 45%;
    left: 50%;
    transform: translate(-50%, -50%);
    transition: all 0.3s ease-in-out;
}

.door-container:hover{
    .lock-circle{
        top: 50%;
    }
}

.door-container {
    position: relative;
}

.door-container::before {
    content: "";
    position: absolute;
    inset: 0;
    border: 2px solid transparent;
    transition: border 0.3s ease-in-out;
    border-radius: 15px;
}

.door-container:hover::before {
    border: 2px solid var(--soft-black);
}

/* Add these new styles at the end of your existing CSS file */
.door-open{
  background-color: transparent;
}
.door-open .left-door {
  
    animation: slideLeft 1.5s ease-in-out forwards;
  }
  
  .door-open .right-door {
    animation: slideRight 1.5s ease-in-out forwards;
  }
  
  @keyframes slideLeft {
    0% {
      transform: translateX(0);
    }
    25% {
      transform: translateX(-95%);
    }
    35% {
      transform: translateX(-80%); /* Bounce back */
    }
    45% {
      transform: translateX(-95%); /* Slight bounce */
    }
    55% {
      transform: translateX(-80%); /* Return to 80% */
    }
    80% {
      transform: translateX(-100%); /* Hold at 80% */
    }
    100% {
      transform: translateX(-100%); /* Fast final movement */
    }
  }
  
  @keyframes slideRight {
    0% {
      transform: translateX(0);
    }
    25% {
      transform: translateX(95%);
    }
    35% {
      transform: translateX(80%); /* Bounce back */
    }
    45% {
      transform: translateX(95%); /* Slight bounce */
    }
    55% {
      transform: translateX(80%); /* Return to 80% */
    }
    80% {
      transform: translateX(100%); /* Hold at 80% */
    }
    100% {
      transform: translateX(100%); /* Fast final movement */
    }
  }
  